import pygame
import sys
import math

pygame.init()

resolution = (1080, 720)
screen = pygame.display.set_mode(resolution)
pygame.display.set_caption("Mon Super Jeu")

background = pygame.image.load('assets/bg.png')
background = pygame.transform.scale(background, resolution)

white = (255, 255, 255)

player_width = 50
player_height = 50
player_x = resolution[0] // 2 - player_width // 2
player_y = resolution[1] - player_height
player_speed = 5
jump_height = 10
gravity = 1

background_width = background.get_width()
background_x = 0

camera_speed = 5
camera_x = resolution[0] // 2


clock = pygame.time.Clock()

def calculate_background_speed(player_x):
    distance_to_left_edge = player_x
    distance_to_right_edge = resolution[0] - player_x - player_width

    max_distance = max(distance_to_left_edge, distance_to_right_edge)
    normalized_distance = max_distance / resolution[0]
    speed_factor = 1 + 4 * normalized_distance

    return camera_speed * speed_factor


while True:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit()

    keys = pygame.key.get_pressed()

    if keys[pygame.K_LEFT] and player_x > 0:
        player_x -= player_speed
        print(player_x)
    if keys[pygame.K_RIGHT] and player_x < resolution[0] - player_width:
        player_x += player_speed
        print(player_x)

    if keys[pygame.K_SPACE] and player_y == resolution[1] - player_height:
        player_y -= jump_height

    if player_y < resolution[1] - player_height:
        player_y += gravity

    camera_x = player_x - resolution[0] // 2

    background_speed = 0
    if keys[pygame.K_LEFT]:
        background_speed = calculate_background_speed(player_x)

    background_x += background_speed

    if keys[pygame.K_RIGHT]:
        background_speed = calculate_background_speed(player_x)

    background_x -= background_speed



    if background_x < -background_width:
        background_x += background_width

    if background_x > -background_width:
        background_x -= background_width

    screen.blit(background, (background_x - camera_x, 0))
    screen.blit(background, (background_x - camera_x + background_width, 0))

    pygame.draw.rect(screen, white, (player_x - camera_x, player_y, player_width, player_height))

    pygame.display.flip()

    clock.tick(60)
