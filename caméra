import pygame
import sys

# Initialisation de Pygame
pygame.init()

# Paramètres de la fenêtre
largeur, hauteur = 800, 600
ecran = pygame.display.set_mode((largeur, hauteur))
pygame.display.set_caption('Fond qui bouge avec un sprite')

# Couleurs
NOIR = (0, 0, 0)
BLANC = (255, 255, 255)

# Charger l'image de fond
resolution = (1080, 720)
fond_original = pygame.image.load('assets/bg.png')
fond_original = pygame.transform.scale(fond_original, resolution)
fond_rect_original = fond_original.get_rect()

# Dupliquer le fond
fond_copie = fond_original.copy()
fond_rect_copie = fond_copie.get_rect()
fond_rect_copie.x = largeur

# Zone de suivi
zone_suivi = pygame.Rect(largeur // 8, hauteur // 8, 3 * largeur // 4, 3 * hauteur // 4)

# Classe pour le sprite
class Sprite(pygame.sprite.Sprite):
    def __init__(self):
        super().__init__()
        self.image = pygame.Surface((50, 50))
        self.image.fill((255, 0, 0))  # Rouge pour le sprite (vous pouvez remplacer cela par votre propre image)
        self.rect = self.image.get_rect()
        self.rect.center = (largeur // 2, hauteur // 2)
        self.vitesse = 5  # Vitesse de déplacement du sprite

    def update(self):
        touches = pygame.key.get_pressed()
        if touches[pygame.K_a]:  # Touche A
            self.rect.x -= self.vitesse
        if touches[pygame.K_d]:  # Touche D
            self.rect.x += self.vitesse
        if touches[pygame.K_w]:  # Touche W
            self.rect.y -= self.vitesse
        if touches[pygame.K_s]:  # Touche S
            self.rect.y += self.vitesse

# Créer une instance du sprite
sprite = Sprite()

# Groupe de sprites
tous_les_sprites = pygame.sprite.Group()
tous_les_sprites.add(sprite)

# Suivi de la caméra
suivi_camera = True
vitesse_camera = sprite.vitesse  # Nouvelle variable pour la vitesse de la caméra

# Boucle principale du jeu
while True:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit()

    # Mise à jour du sprite
    tous_les_sprites.update()

    if suivi_camera:
        # Mettre à jour la position des fonds en fonction du mouvement du sprite
        decalage_x = (largeur // 2) - sprite.rect.centerx
        fond_rect_original.x += decalage_x
        fond_rect_copie.x += decalage_x

        # Si l'original sort de l'écran, ramenez-le à droite de la copie
        if fond_rect_original.right <= 0:
            fond_rect_original.x = fond_rect_copie.x + largeur

        # Si la copie sort de l'écran, ramenez-la à droite de l'original
        if fond_rect_copie.right <= 0:
            fond_rect_copie.x = fond_rect_original.x + largeur

        # Si l'original sort de l'écran à gauche, ramenez-le à droite de la copie
        if fond_rect_original.left >= largeur:
            fond_rect_original.x = fond_rect_copie.x - largeur

        # Si la copie sort de l'écran à gauche, ramenez-la à droite de l'original
        if fond_rect_copie.left >= largeur:
            fond_rect_copie.x = fond_rect_original.x - largeur

        # Ajuster la position de la caméra en fonction du sprite et de la zone de suivi
        if not zone_suivi.colliderect(sprite.rect):
            diff_x = sprite.rect.centerx - zone_suivi.centerx
            diff_y = sprite.rect.centery - zone_suivi.centery
            zone_suivi.x += diff_x
            zone_suivi.y += diff_y
            fond_rect_original.x += diff_x
            fond_rect_copie.x += diff_x
            fond_rect_original.y += diff_y
            fond_rect_copie.y += diff_y

    # Effacer l'écran
    ecran.fill(NOIR)

    # Afficher les fonds
    ecran.blit(fond_original, fond_rect_original)
    ecran.blit(fond_copie, fond_rect_copie)

    # Afficher le sprite
    tous_les_sprites.draw(ecran)

    # Dessiner le rectangle de suivi
    pygame.draw.rect(ecran, BLANC, zone_suivi, 2)

    # Vérifier si le sprite touche les bords du rectangle de suivi
    if zone_suivi.collidepoint(sprite.rect.topleft) or \
       zone_suivi.collidepoint(sprite.rect.topright) or \
       zone_suivi.collidepoint(sprite.rect.bottomleft) or \
       zone_suivi.collidepoint(sprite.rect.bottomright):
        suivi_camera = True
    else:
        suivi_camera = False

    # Mise à jour de l'écran
    pygame.display.flip()
